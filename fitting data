import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.optimizers import SGD
from keras.layers import Dense,Activation
data = pd.read_csv('C:\\Users\\1701\Desktop\\wt031.csv')
x_data = np.array(data['WIND_SPEED'])
y = np.array(data['REAL_POWER'])
# x_data=np.linspace(-0.5,0.5,200)
# noise = np.random.normal(0,0.02,x_data.shape)
# y_data=np.square(x_data)+noise

#数据归一化
y_data=[]
for i in y:
    y_= float(i - np.min(y))/(np.max(y)- np.min(y))
    y_data.append(y_)


plt.scatter(x_data,y_data)


#构建顺序模型
model = Sequential()
#在模型中添加全连接层
model.add(Dense(units=10,input_dim=1,activation='tanh'))
#model.add(Activation('tanh'))#添加激活函数
model.add(Dense(units=1,activation='tanh'))
#model.add(Activation('tanh'))#添加激活函数
#i定义优化算法
sgd = SGD(lr=0.01)
#SGd随机梯度下降，mse均方误差
model.compile(optimizer=sgd,loss='mse')

#迭代3000个批次
for step in range(len(y_data)):
    #每次训练一个批次
    cost = model.train_on_batch(x_data,y_data)
    #每500batch打印一次COST值
    if step%500==0:
        print('cost',cost)
#打印权值和片纸置值
W,b = model.layers[0].get_weights()
print('W:',W,'b:',b)
#x_data输入到网络中，得到预测值y_data
y_pred = model.predict(x_data)
#显示随机点
plt.scatter(x_data,y_data)
#显示预测结果
plt.plot(x_data,y_pred,'r',lw=3)
plt.show()
